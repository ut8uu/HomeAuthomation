esphome:
  name: "esphome-web-e4a120"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "e4a1205ZAWxO7H9NmqXwdmWJYaOEWfAxxxTyZXoUu+w="

ota:
  password: "e4a12088743f9290f2d462d1488ada67"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-E4A120"
    password: "Oacu6Qx50NRu"

captive_portal:

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO23
  miso_pin: GPIO19

output:
  # backlight
  - platform: ledc
    pin: 15
    id: gpio_15_backlight_pwm
    inverted: true

light:
  # backlight for HA
  - platform: monochromatic
    output: gpio_15_backlight_pwm
    name: "ILI9341 Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON

font:
  - file: "gfonts://Roboto"
    id: font20
    size: 20
  - file: "gfonts://Roboto"
    id: font25
    size: 25
  - file: "gfonts://Roboto"
    id: font30
    size: 30
  - file: "gfonts://Roboto"
    id: font40
    size: 40
  - file: "gfonts://Roboto"
    id: font60
    size: 60
  - file: "gfonts://Roboto"
    id: font80
    size: 80

color:
  - id: my_red
    red: 100%
    green: 3%
    blue: 5%

text_sensor:
  - platform: homeassistant
    id: outdoor_temperature
    entity_id: "sensor.outdoor_temperature"
  - platform: homeassistant
    id: indoor_temperature
    entity_id: "sensor.living_room_temperature"

time:
  - platform: sntp
    id: sntp_time

touchscreen:
  platform: xpt2046
  id: my_touchscreen
  cs_pin: GPIO16
  interrupt_pin: GPIO21
  update_interval: 50ms
  report_interval: 1s
  threshold: 400
  calibration_x_min: 3860
  calibration_x_max: 280
  calibration_y_min: 340
  calibration_y_max: 3860
  swap_x_y: false

display:
  - platform: ili9341
    model: TFT 2.4
    id: touch_display
    cs_pin: GPIO5
    dc_pin: GPIO4
    # if backlight is not controlled by pwm uncomment this 
    #led_pin:
    #  number: 15
    #  inverted: true
    reset_pin: GPIO22

    lambda: |-
      auto outdoor_temp_y = 30;
      auto indoor_temp_y = 100;
      it.fill(Color::BLACK);
      it.strftime(120, 0, id(font25), TextAlign::TOP_CENTER, "%d.%m.%Y %H:%M:%S", id(sntp_time).now());
      if (id(outdoor_temperature).has_state())
      {
        it.printf(240, outdoor_temp_y, id(font80), TextAlign::TOP_RIGHT, "%s C", id(outdoor_temperature).state.c_str());
      }
      else
      {
        it.print(240, outdoor_temp_y, id(font80), TextAlign::TOP_RIGHT, "--.- C");
      }
      if (id(indoor_temperature).has_state())
      {
        it.printf(240, indoor_temp_y, id(font80), TextAlign::TOP_RIGHT, "%s C", id(indoor_temperature).state.c_str());
      }
      else
      {
        it.print(240, indoor_temp_y, id(font80), TextAlign::TOP_RIGHT, "--.- C");
      }
      delay(500);
